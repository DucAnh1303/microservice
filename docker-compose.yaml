version: '3.8'
services:
  mysql:
    image: mysql:latest
    container_name: my-sql
    environment:
      MYSQL_DATABASE: microservice
      MYSQL_ROOT_PASSWORD: 123456789
    ports:
      - "13306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
  postgres:
    image: postgres:latest
    container_name: postgres-sql
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: microservice
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  #  axon-server:
  #    image: axoniq/axonserver:latest
  #    container_name: axon-server
  #    hostname: axonserver
  #    ports:
  #      - "8024:8024"   # gRPC port
  #      - "8124:8124"   # HTTP port
  #    volumes:
  #      - axonserver-data:/data
  #      - axonserver-events:/eventdata
  #      - axonserver-config:/config:ro
  #    networks:
  #      - axon-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./kafka/zookeeper_data:/var/lib/zookeeper/data
      - ./kafka/zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 10
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    volumes:
      - ./kafka/kafka_data:/var/lib/kafka/data
      - ./kafka/kafka_log:/var/lib/kafka/log

  redis:
    image: redis:latest
    container_name: redis-vendor
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "16379:6379"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch-node
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

#  kibana:
#    image: docker.elastic.co/kibana/kibana:8.9.0
#    container_name: kibana
#    environment:
#      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
#    ports:
#      - "5601:5601"
#    depends_on:
#      - elasticsearch
#    networks:
#      - elastic

networks:
  axon-network:
    driver: bridge
  myNetwork:
    driver: bridge
  elasticsearch:
    driver: elastic

volumes:
  axonserver-data:
  axonserver-events:
  axonserver-config:
  mysql-data:
  redis.conf:
  postgres_data:
