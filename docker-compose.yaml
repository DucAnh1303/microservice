version: '3.8'
services:
  mysql:
    image: mysql:latest
    container_name: my-sql
    environment:
      MYSQL_DATABASE: microservice
      MYSQL_ROOT_PASSWORD: 123456789
    ports:
      - "13306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
  postgres:
    image: postgres:latest
    container_name: postgres-sql
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: microservice
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

#  axon-server:
#    image: axoniq/axonserver:latest
#    container_name: axon-server
#    hostname: axonserver
#    ports:
#      - "8024:8024"   # gRPC port
#      - "8124:8124"   # HTTP port
#    volumes:
#      - axonserver-data:/data
#      - axonserver-events:/eventdata
#      - axonserver-config:/config:ro
#    networks:
#      - axon-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  redis:
    image: redis:latest
    container_name: redis-vendor
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "16379:6379"
networks:
  axon-network:
    driver: bridge
  myNetwork:
    driver: bridge

volumes:
  axonserver-data:
  axonserver-events:
  axonserver-config:
  mysql-data:
  redis.conf:
  postgres_data:
